#!/usr/bin/env /bin/bash

#                     R E A L M S    O F    D E S P A I R  !
#   ___________________________________________________________________________
#  //            /                                                            \\
# [|_____________\   ********   *        *   ********   *        *   *******   |]
# [|   \\._.//   /  **********  **      **  **********  **      **  *********  |]
# [|   (0...0)   \  **********  ***    ***  **********  ***    ***  *********  |]
# [|    ).:.(    /  ***         ****  ****  ***    ***  ***    ***  ***        |]
# [|    {o o}    \  *********   **********  **********  ***    ***  *** ****   |]
# [|   / ' ' \   /   *********  *** ** ***  **********  ***    ***  ***  ****  |]
# [|-'- /   \ -`-\         ***  ***    ***  ***    ***  ***    ***  ***   ***  |]
# [|   .VxvxV.   /   *********  ***    ***  ***    ***  **********  *********  |]
# [|_____________\  **********  **      **  **      **  **********  *********  |]
# [|             /  *********   *        *  *        *   ********    *******   |]
#  \\____________\____________________________________________________________//
#     |                                                                     |
#     |    --{ [S]imulated [M]edieval [A]dventure Multi[U]ser [G]ame }--    |
#     |_____________________________________________________________________|
#     |                                                                     |
#     |                       -*- Service Monitor -*-                       |
#     |_____________________________________________________________________|
#    //                                                                     \\
#   [|  SMAUG 2.0 © 2014-2015 Antonio Cao (@burzumishi)                      |]
#   [|                                                                       |]
#   [|  AFKMud Copyright 1997-2007 by Roger Libiez (Samson),                 |]
#   [|  Levi Beckerson (Whir), Michael Ward (Tarl), Erik Wolfe (Dwip),       |]
#   [|  Cameron Carroll (Cam), Cyberfox, Karangi, Rathian, Raine,            |]
#   [|  Xorith, and Adjani.                                                  |]
#   [|  All Rights Reserved. External contributions from Remcon, Quixadhal,  |]
#   [|  Zarius and many others.                                              |]
#   [|                                                                       |]
#   [|  SMAUG 1.4 © 1994-1998 Thoric/Altrag/Blodkai/Narn/Haus/Scryn/Rennard  |]
#   [|  Swordbearer/Gorog/Grishnakh/Nivek/Tricops/Fireblade/Edmond/Conran    |]
#   [|                                                                       |]
#   [|  Merc 2.1 Diku Mud improvments © 1992-1993 Michael Chastain, Michael  |]
#   [|  Quan, and Mitchell Tse. Original Diku Mud © 1990-1991 by Sebastian   |]
#   [|  Hammer, Michael Seifert, Hans Henrik St{rfeldt, Tom Madsen, Katja    |]
#   [|  Nyboe. Win32 port Nick Gammon.                                       |]
#    \\_____________________________________________________________________//

source /usr/local/etc/smaug/smaugd.conf

true=0;
false=1;

start_exec() {
	if test ! -f "$EXEC_PIDFILE"; then

		sleep $RESPAWN_TIMER;
		echo -n "'$MONITOR' (PID: $$) spawning '$EXEC' "

		($BINDIR/$EXEC $PORT &>>$EXEC_LOGFILE &) &

		until	pidof $EXEC > $EXEC_PIDFILE; do
			sleep $MONITOR_TIMER;
		done;

		echo "(PID: $(cat $EXEC_PIDFILE)) started!";
	fi;

	return $true;
}

trap_system_int() {
	trap "manage_system_int" SIGINT SIGQUIT SIGTERM SIGKILL SIGSEGV
}

manage_system_int() {
	echo "'$MONITOR' (PID: $$) received an interrupt!";
	exit_monitor $false;
}

check_dirs() {
	for DIR in $RUNDIR $LOGDIR; do
	  if test ! -d "$DIR"; then
			mkdir -p $DIR &>/dev/null;
		fi;
	done;

	return $true;
}

exit_monitor() {
	exit_val=$1; shift;

	if test -f "$MONITOR_PIDFILE"; then
		rm -f $MONITOR_PIDFILE;
	fi;

	if test $exit_val -ne 0; then
		echo "'$MONITOR' (PID: $$) terminated on: \"$(date)\" with code ($exit_val)!";
	else
		echo "'$MONITOR' (PID: $$) closing ... Goodbye!";
	fi;

	exit $exit_val;
}

monitor_exec() {
	while :
	do
		if test ! -f "/proc/$(cat $EXEC_PIDFILE)/status"; then
	   	echo -n "Oopps! '$EXEC' has crashed at \"$(date)\", ";

			if test -f "$EXEC_PIDFILE"; then
				rm -f $EXEC_PIDFILE;
			fi;

    	start_exec || exit_monitor $false;
		fi;
	
		sleep $MONITOR_TIMER;
	done

	return $true;
}

main() {
	trap_system_int;

	while :
	do
		read user_keyboard_input &

		echo $$ > $MONITOR_PIDFILE || exit_monitor $false;

		test -x $BINDIR/$EXEC || exit_monitor $false;

		set -e;

		check_dirs;

		start_exec || exit_monitor $false;

		monitor_exec;
	done;

	exit_monitor $true;
}

main "$@";

exit $true;
